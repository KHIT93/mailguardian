# Generated by Django 3.2.4 on 2021-07-13 18:34

from django.db import migrations, models
import uuid


def create_sa_rules(apps, schema_editor):
    Rule = apps.get_model('spamassassin', 'Rule')
    Rule.objects.update_or_create(name='SPF_NONE', defaults={'name': 'SPF_NONE', 'score':0.00})
    Rule.objects.update_or_create(name='SPF_HELO_NONE', defaults={'name': 'SPF_HELO_NONE', 'score': 0.00})
    Rule.objects.update_or_create(name='SPF_PASS', defaults={'name': 'SPF_PASS', 'score': -0.01})
    Rule.objects.update_or_create(name='SPF_HELO_PASS', defaults={'name': 'SPF_HELO_PASS', 'score': -0.001})
    Rule.objects.update_or_create(name='SPF_FAIL', defaults={'name': 'SPF_FAIL', 'score': 4.00})
    Rule.objects.update_or_create(name='SPF_HELO_FAIL', defaults={'name': 'SPF_HELO_FAIL', 'score': 4.00})
    Rule.objects.update_or_create(name='SPF_HELO_NEUTRAL', defaults={'name': 'SPF_HELO_NEUTRAL', 'score': 0.00})
    Rule.objects.update_or_create(name='SPF_HELO_SOFTFAIL', defaults={'name': 'SPF_HELO_SOFTFAIL', 'score': 1.50})
    Rule.objects.update_or_create(name='SPF_NEUTRAL', defaults={'name': 'SPF_NEUTRAL', 'score': 0.00})
    Rule.objects.update_or_create(name='SPF_SOFTFAIL', defaults={'name': 'SPF_SOFTFAIL', 'score': 1.50})
    Rule.objects.update_or_create(name='URIBL_AB_SURBL', defaults={'name': 'URIBL_AB_SURBL', 'score': 4.50})
    Rule.objects.update_or_create(name='URIBL_JP_SURBL', defaults={'name': 'URIBL_JP_SURBL', 'score': 1.90})
    Rule.objects.update_or_create(name='URIBL_WS_SURBL', defaults={'name': 'URIBL_WS_SURBL', 'score': 1.70})
    Rule.objects.update_or_create(name='URIBL_MW_SURBL', defaults={'name': 'URIBL_MW_SURBL', 'score': 1.30})
    Rule.objects.update_or_create(name='MISSING_MID', defaults={'name': 'MISSING_MID', 'score': 1.60})
    Rule.objects.update_or_create(name='RCVD_IN_SORBS_HTTP', defaults={'name': 'RCVD_IN_SORBS_HTTP', 'score': 0.00})
    Rule.objects.update_or_create(name='RCVD_IN_SORBS_SOCKS', defaults={'name': 'RCVD_IN_SORBS_SOCKS', 'score': 0.00})
    Rule.objects.update_or_create(name='RCVD_IN_SORBS_MISC', defaults={'name': 'RCVD_IN_SORBS_MISC', 'score': 2.60})
    Rule.objects.update_or_create(name='RCVD_IN_SORBS_SMTP', defaults={'name': 'RCVD_IN_SORBS_SMTP', 'score': 2.60})
    Rule.objects.update_or_create(name='RCVD_IN_SORBS_WEB', defaults={'name': 'RCVD_IN_SORBS_WEB', 'score': 0.00})
    Rule.objects.update_or_create(name='RCVD_IN_SORBS_BLOCK', defaults={'name': 'RCVD_IN_SORBS_BLOCK', 'score': 0.00})
    Rule.objects.update_or_create(name='RCVD_IN_SORBS_ZOMBIE', defaults={'name': 'RCVD_IN_SORBS_ZOMBIE', 'score': 1.00})
    Rule.objects.update_or_create(name='RCVD_IN_SORBS_DUL', defaults={'name': 'RCVD_IN_SORBS_DUL', 'score': 4.00})
    Rule.objects.update_or_create(name='RCVD_IN_XBL', defaults={'name': 'RCVD_IN_XBL', 'score': 4.73})
    Rule.objects.update_or_create(name='RCVD_IN_CBL', defaults={'name': 'RCVD_IN_CBL', 'score': 4.73})
    Rule.objects.update_or_create(name='RCVD_IN_PSBL', defaults={'name': 'RCVD_IN_PSBL', 'score': 2.70})
    Rule.objects.update_or_create(name='RCVD_IN_BRBL_LASTEXT', defaults={'name': 'RCVD_IN_BRBL_LASTEXT', 'score': 4.64})
    Rule.objects.update_or_create(name='URIBL_DBL_SPAM', defaults={'name': 'URIBL_DBL_SPAM', 'score': 2.70})
    Rule.objects.update_or_create(name='RCVD_IN_MSPIKE_L2', defaults={'name': 'RCVD_IN_MSPIKE_L2', 'score': 1.01})
    Rule.objects.update_or_create(name='RCVD_IN_MSPIKE_L3', defaults={'name': 'RCVD_IN_MSPIKE_L3', 'score': 2.49})
    Rule.objects.update_or_create(name='RCVD_IN_MSPIKE_L4', defaults={'name': 'RCVD_IN_MSPIKE_L4', 'score': 4.49})
    Rule.objects.update_or_create(name='RCVD_IN_MSPIKE_L5', defaults={'name': 'RCVD_IN_MSPIKE_L5', 'score': 6.19})
    Rule.objects.update_or_create(name='RDNS_DYNAMIC', defaults={'name': 'RDNS_DYNAMIC', 'score': 2.60})
    Rule.objects.update_or_create(name='RDNS_LOCALHOST', defaults={'name': 'RDNS_LOCALHOST', 'score': 1.00})
    Rule.objects.update_or_create(name='RDNS_NONE', defaults={'name': 'RDNS_NONE', 'score': 2.00})
    Rule.objects.update_or_create(name='BAYES_80', defaults={'name': 'BAYES_80', 'score': 4.20})
    Rule.objects.update_or_create(name='BAYES_99', defaults={'name': 'BAYES_99', 'score': 5.00})
    Rule.objects.update_or_create(name='BAYES_999', defaults={'name': 'BAYES_999', 'score': 1.00})
    Rule.objects.update_or_create(name='PYZOR_CHECK', defaults={'name': 'PYZOR_CHECK', 'score': 1.50})
    Rule.objects.update_or_create(name='BAYES_50', defaults={'name': 'BAYES_50', 'score':1.50})
    Rule.objects.update_or_create(name='MIME_HTML_ONLY', defaults={'name': 'MIME_HTML_ONLY', 'score':0.72})
    Rule.objects.update_or_create(name='HTML_MIME_NO_HTML_TAG', defaults={'name': 'HTML_MIME_NO_HTML_TAG', 'score':0.38})
    Rule.objects.update_or_create(name='TO_EQ_FM_DOM_SPF_FAIL', defaults={'name': 'TO_EQ_FM_DOM_SPF_FAIL', 'score':0.23})
    Rule.objects.update_or_create(name='RAZOR2_CF_RANGE_51_100', defaults={'name': 'RAZOR2_CF_RANGE_51_100', 'score':2.00})
    Rule.objects.update_or_create(name='RAZOR2_CHECK', defaults={'name': 'RAZOR2_CHECK', 'score':0.90})
    Rule.objects.update_or_create(name='MAILING_LIST_MULTI', defaults={'name': 'MAILING_LIST_MULTI', 'score':-1.00})
    Rule.objects.update_or_create(name='MPART_ALT_DIFF', defaults={'name': 'MPART_ALT_DIFF', 'score':0.80})
    Rule.objects.update_or_create(name='HTML_IMAGE_RATIO_02', defaults={'name': 'HTML_IMAGE_RATIO_02', 'score':0.44})
    Rule.objects.update_or_create(name='FROM_EXCESS_BASE64', defaults={'name': 'FROM_EXCESS_BASE64', 'score':0.98})
    Rule.objects.update_or_create(name='HTML_IMAGE_RATIO_04', defaults={'name': 'HTML_IMAGE_RATIO_04', 'score':0.56})
    Rule.objects.update_or_create(name='USER_IN_DEF_SPF_WL', defaults={'name': 'USER_IN_DEF_SPF_WL', 'score':-5.00})
    Rule.objects.update_or_create(name='USER_IN_DEF_DKIM_WL', defaults={'name': 'USER_IN_DEF_DKIM_WL', 'score':-5.00})
    Rule.objects.update_or_create(name='HTML_IMAGE_ONLY_24', defaults={'name': 'HTML_IMAGE_ONLY_24', 'score':1.62})
    Rule.objects.update_or_create(name='BAYES_60', defaults={'name': 'BAYES_60', 'score':2.00})
    Rule.objects.update_or_create(name='SUBJ_ALL_CAPS', defaults={'name': 'SUBJ_ALL_CAPS', 'score':1.00})
    Rule.objects.update_or_create(name='URI_HEX', defaults={'name': 'URI_HEX', 'score':1.00})

class Migration(migrations.Migration):

    replaces = [('spamassassin', '0001_initial'), ('spamassassin', '0002_rule'), ('spamassassin', '0003_auto_20180709_1604'), ('spamassassin', '0004_auto_20180713_2224'), ('spamassassin', '0005_auto_20181023_1931'), ('spamassassin', '0006_auto_20181106_1910'), ('spamassassin', '0007_auto_20181106_1910')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='RuleDescription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('score', models.DecimalField(decimal_places=2, default=0.0, max_digits=7)),
            ],
        ),
        migrations.RunPython(
            code=create_sa_rules,
        ),
        migrations.AlterModelOptions(
            name='rule',
            options={'verbose_name': 'rule', 'verbose_name_plural': 'rules'},
        ),
        migrations.AlterModelOptions(
            name='ruledescription',
            options={'verbose_name': 'rule description', 'verbose_name_plural': 'rule descriptions'},
        ),
        migrations.AlterField(
            model_name='rule',
            name='name',
            field=models.CharField(max_length=255, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='rule',
            name='score',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=7, verbose_name='Score'),
        ),
        migrations.AlterField(
            model_name='ruledescription',
            name='key',
            field=models.CharField(max_length=255, unique=True, verbose_name='Key'),
        ),
        migrations.AlterField(
            model_name='ruledescription',
            name='value',
            field=models.TextField(blank=True, null=True, verbose_name='Value'),
        ),
        migrations.AlterModelOptions(
            name='ruledescription',
            options={'ordering': ('key',), 'verbose_name': 'rule description', 'verbose_name_plural': 'rule descriptions'},
        ),
        migrations.AlterModelOptions(
            name='rule',
            options={'ordering': ('name',), 'verbose_name': 'rule', 'verbose_name_plural': 'rules'},
        ),
    ]
