[project]
name = "mailguardian"
version = "3.0.0"
description = "Powerful toolstack to process emails using MailScanner"
authors = [
    { name = "Kenneth Hansen", email = "kenneth@khansen-it.dk" }
]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "alembic==1.14.*",
    "celery<6",
    "chardet>=5.2.0",
    "fastapi[all]==0.115.*",
    "httpx[http2]==0.28.*",
    "huey==2.5.*",
    "invoke==2.2.*",
    "lxml[html-clean]==5.3.*",
    "passlib[argon2]==1.7.*",
    "psycopg==3.2.*",
    "purepythonmilter>=0.0.1",
    "pydantic-settings==2.7.*",
    "pydantic[email]==2.10.*",
    "pymailq>=0.9.0",
    "pyotp==2.9.*",
    "python-dotenv==1.0.*",
    "python-jose==3.3.*",
    "sqlmodel==0.0.24",
    "typer==0.15.*",
    "watchdog==6.0.*",
    "webauthn==2.4.*",
]

[tool.setuptools]
packages = ["mailguardian"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions,
    "FAST001",
    "FAST003"
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

preview = true

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
